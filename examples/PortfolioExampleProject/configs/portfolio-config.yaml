# ---------------------------------------------------------------------------
# P.A.P.E.R Portfolio Configuration File
# This file defines the entire portfolio construction and evaluation phase.
# It uses the prediction files generated by the paper-model component
# and combines them with other necessary datasets to test strategies.
# ---------------------------------------------------------------------------

# --- Input Data Configuration ---
# This section defines all the data sources required for the analysis.
# The new, decoupled design allows you to run this phase with just the
# prediction files and a few small supplementary CSVs.
input_data:
  # A list of model names whose predictions you want to evaluate.
  # The tool will look for a corresponding '{model_name}_predictions.parquet'
  # file in the 'models/predictions/' directory.
  prediction_model_names:
  - "pls_full_tuned" # Partial Least Squares Regression
  - "pcr_full_tuned" # Principal Component Regression: PCA + OLS
  - "rf_full_tuned" # Random Forest Regression
  # Specifies the method for getting predictions. Currently, only loading
  # from pre-computed files is supported.
  prediction_extraction_method: "precomputed_prediction_files"
  precomputed_prediction_files:
    # Defines the standard column names for date and firm ID within the prediction files.
    date_column: "date"
    id_column: "permno"

  # --- Additional Datasets for Evaluation ---
  # These files must be placed in the 'portfolios/additional_datasets/' directory.

  # Specifies the file containing the risk-free rate, which is essential
  # for calculating risk-adjusted metrics like the Sharpe Ratio.
  risk_free_dataset:
    file_name: "risk_free.csv"
    date_column: "date" # Column name for dates in the CSV.
    return_column: "rf" # Column name for the risk-free rate in the CSV.
    date_format: "%Y%m%d" # The date format to use for parsing.

  # Optional: Specifies a market index for benchmark comparison in plots and reports.
  market_benchmark:
    name: "S&P 500" # The display name for the benchmark.
    file_name: "benchmark_stock_dec1989_dec2021.csv"
    date_column: "date"
    return_column: "ret"
    date_format: "%Y-%m-%d"
  # Optional: Specifies the file containing the market capitalization (or other value metric)
  # for value-weighting schemes. This section is commented out because this example
  # only runs equal-weighted strategies, but it shows how it would be configured.
  # company_values_weights:
  #   file_name: "company_values.csv"
  #   date_column: "date"
  #   id_column: "permno"
  #   value_weight_col: "mvel1" # The column containing the weighting values.
  #   date_format: "%Y-%m-%d"

  # --- Analysis and Metrics ---

  # If true, generates plots showing the cumulative performance of each prediction decile.
  # This is a powerful diagnostic to check if higher predictions lead to higher returns.
cross_sectional_analysis: true

# A list of performance metrics to calculate for each portfolio strategy.
metrics:
- "sharpe_ratio"
- "expected_shortfall"
- "cumulative_return"

# --- Portfolio Strategy Definitions ---
# A list of long-short portfolio strategies to backtest. Each strategy will be
# applied to the predictions of every model listed in 'prediction_model_names'.
portfolio_strategies:

# Strategy 1: A standard decile sort, equally weighted.
- name: "EQ90"
  weighting_scheme: "equal" # Each stock in a leg gets an equal weight.
  long_quantiles: [ 0.9, 1.0 ] # Go long the top 10% of predicted performers.
  short_quantiles: [ 0.0, 0.1 ] # Go short the bottom 10% of predicted performers.

# Strategy 2: A more conservative strategy that avoids the extreme tails.
# This can help mitigate the impact of outliers or highly volatile assets that
# may populate the absolute extremes of the ranked predictions.
- name: "EQ95"
  weighting_scheme: "equal"
  long_quantiles: [ 0.90, 0.95 ] # Go long the 90th to 95th percentile.
  short_quantiles: [ 0.05, 0.10 ] # Go short the 5th to 10th percentile.

# The following strategies are commented out but show how to configure
# value-weighted portfolios. To run them, you would need to uncomment them
# and also provide the 'company_values_weights' dataset configuration above.
# - name: "VAL90"
#   weighting_scheme: "value" # Stocks are weighted by their market cap.
#   long_quantiles: [0.9, 1.0]
#   short_quantiles: [0.0, 0.1]
#
# - name: "VAL95"
#   weighting_scheme: "value"
#   long_quantiles: [0.90, 0.95]
#   short_quantiles: [0.05, 0.10]
